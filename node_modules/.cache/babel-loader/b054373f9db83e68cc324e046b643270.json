{"ast":null,"code":"import { extend } from '../../../utils/utils';\nexport default function setBreakpoint() {\n  var swiper = this;\n  var activeIndex = swiper.activeIndex,\n    initialized = swiper.initialized,\n    _swiper$loopedSlides = swiper.loopedSlides,\n    loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,\n    params = swiper.params,\n    $el = swiper.$el;\n  var breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n        var paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n    var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    var wasMultiRow = params.slidesPerColumn > 1;\n    var isMultiRow = breakpointParams.slidesPerColumn > 1;\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n      swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(params.containerModifierClass + \"multirow\");\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(params.containerModifierClass + \"multirow-column\");\n      }\n      swiper.emitContainerClasses();\n    }\n    var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n    extend(swiper.params, breakpointParams);\n    extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev\n    });\n    swiper.currentBreakpoint = breakpoint;\n    swiper.emit('_beforeBreakpoint', breakpointParams);\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}","map":{"version":3,"names":["extend","setBreakpoint","swiper","activeIndex","initialized","_swiper$loopedSlides","loopedSlides","params","$el","breakpoints","Object","keys","length","breakpoint","getBreakpoint","breakpointsBase","el","currentBreakpoint","breakpointOnlyParams","undefined","forEach","param","paramValue","parseFloat","parseInt","breakpointParams","originalParams","wasMultiRow","slidesPerColumn","isMultiRow","removeClass","containerModifierClass","emitContainerClasses","addClass","slidesPerColumnFill","directionChanged","direction","needsReLoop","loop","slidesPerView","changeDirection","allowTouchMove","allowSlideNext","allowSlidePrev","emit","loopDestroy","loopCreate","updateSlides","slideTo"],"sources":["C:/Users/Alican/Desktop/bmcze-new_branch/node_modules/swiper/esm/components/core/breakpoints/setBreakpoint.js"],"sourcesContent":["import { extend } from '../../../utils/utils';\nexport default function setBreakpoint() {\n  var swiper = this;\n  var activeIndex = swiper.activeIndex,\n      initialized = swiper.initialized,\n      _swiper$loopedSlides = swiper.loopedSlides,\n      loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,\n      params = swiper.params,\n      $el = swiper.$el;\n  var breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n        var paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    var wasMultiRow = params.slidesPerColumn > 1;\n    var isMultiRow = breakpointParams.slidesPerColumn > 1;\n\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n      swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(params.containerModifierClass + \"multirow\");\n\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(params.containerModifierClass + \"multirow-column\");\n      }\n\n      swiper.emitContainerClasses();\n    }\n\n    var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    extend(swiper.params, breakpointParams);\n    extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev\n    });\n    swiper.currentBreakpoint = breakpoint;\n    swiper.emit('_beforeBreakpoint', breakpointParams);\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}