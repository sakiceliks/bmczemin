{"ast":null,"code":"import { now, nextTick } from '../../../utils/utils';\nexport default function onTouchEnd(event) {\n  var swiper = this;\n  var data = swiper.touchEventsData;\n  var params = swiper.params,\n    touches = swiper.touches,\n    rtl = swiper.rtlTranslate,\n    $wrapperEl = swiper.$wrapperEl,\n    slidesGrid = swiper.slidesGrid,\n    snapGrid = swiper.snapGrid;\n  var e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n  var touchEndTime = now();\n  var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(function () {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  var currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        var lastMoveEvent = data.velocities.pop();\n        var velocityEvent = data.velocities.pop();\n        var distance = lastMoveEvent.position - velocityEvent.position;\n        var time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        } // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n      data.velocities.length = 0;\n      var momentumDuration = 1000 * params.freeModeMomentumRatio;\n      var momentumDistance = swiper.velocity * momentumDuration;\n      var newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      var doBounce = false;\n      var afterBouncePosition;\n      var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      var needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        var nextSlide;\n        for (var j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', function () {\n          swiper.loopFix();\n        });\n      } // Fix duration\n\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(function () {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(function () {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      swiper.emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  } // Find current slide\n\n  var stopIndex = 0;\n  var groupSize = swiper.slidesSizesGrid[0];\n  for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + _increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + _increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  } // Find current slide size\n\n  var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","map":{"version":3,"names":["now","nextTick","onTouchEnd","event","swiper","data","touchEventsData","params","touches","rtl","rtlTranslate","$wrapperEl","slidesGrid","snapGrid","e","originalEvent","allowTouchCallbacks","emit","isTouched","isMoved","grabCursor","setGrabCursor","startMoving","allowSlideNext","allowSlidePrev","touchEndTime","timeDiff","touchStartTime","allowClick","updateClickedSlide","lastClickTime","destroyed","swipeDirection","diff","currentTranslate","startTranslate","currentPos","followFinger","translate","cssMode","freeMode","minTranslate","slideTo","activeIndex","maxTranslate","slides","length","freeModeMomentum","velocities","lastMoveEvent","pop","velocityEvent","distance","position","time","velocity","Math","abs","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","doBounce","afterBouncePosition","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","allowMomentumBounce","loop","centeredSlides","freeModeSticky","nextSlide","j","once","loopFix","moveDistance","currentSlideSize","slidesSizesGrid","speed","slideToClosest","updateProgress","setTransition","setTranslate","transitionStart","animating","transitionEnd","setTimeout","updateActiveIndex","updateSlidesClasses","longSwipesMs","stopIndex","groupSize","i","slidesPerGroupSkip","slidesPerGroup","_increment","ratio","increment","longSwipes","longSwipesRatio","shortSwipes","isNavButtonTarget","navigation","target","nextEl","prevEl"],"sources":["C:/Users/Alican/Desktop/bmcze-new_branch/node_modules/swiper/esm/components/core/events/onTouchEnd.js"],"sourcesContent":["import { now, nextTick } from '../../../utils/utils';\nexport default function onTouchEnd(event) {\n  var swiper = this;\n  var data = swiper.touchEventsData;\n  var params = swiper.params,\n      touches = swiper.touches,\n      rtl = swiper.rtlTranslate,\n      $wrapperEl = swiper.$wrapperEl,\n      slidesGrid = swiper.slidesGrid,\n      snapGrid = swiper.snapGrid;\n  var e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  var touchEndTime = now();\n  var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(function () {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  var currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        var lastMoveEvent = data.velocities.pop();\n        var velocityEvent = data.velocities.pop();\n        var distance = lastMoveEvent.position - velocityEvent.position;\n        var time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        } // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n\n\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n      data.velocities.length = 0;\n      var momentumDuration = 1000 * params.freeModeMomentumRatio;\n      var momentumDistance = swiper.velocity * momentumDuration;\n      var newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      var doBounce = false;\n      var afterBouncePosition;\n      var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      var needsLoopFix;\n\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        var nextSlide;\n\n        for (var j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n\n        newPosition = -newPosition;\n      }\n\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', function () {\n          swiper.loopFix();\n        });\n      } // Fix duration\n\n\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(function () {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(function () {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      swiper.emit('_freeModeNoMomentumRelease');\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    return;\n  } // Find current slide\n\n\n  var stopIndex = 0;\n  var groupSize = swiper.slidesSizesGrid[0];\n\n  for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + _increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + _increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  } // Find current slide size\n\n\n  var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}