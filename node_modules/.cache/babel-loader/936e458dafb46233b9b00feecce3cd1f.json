{"ast":null,"code":"import { extend } from '../../../utils/utils';\nexport default function updateSlides() {\n  var swiper = this;\n  var getDirectionLabel = function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  };\n  var getDirectionPropertyValue = function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  };\n  var params = swiper.params;\n  var $wrapperEl = swiper.$wrapperEl,\n    swiperSize = swiper.size,\n    rtl = swiper.rtlTranslate,\n    wrongRTL = swiper.wrongRTL;\n  var isVirtual = swiper.virtual && params.virtual.enabled;\n  var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n  var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  var snapGrid = [];\n  var slidesGrid = [];\n  var slidesSizesGrid = [];\n  function slidesForMargin(slideEl, slideIndex) {\n    if (!params.cssMode) return true;\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n    return true;\n  }\n  var offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  var offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  var previousSnapGridLength = swiper.snapGrid.length;\n  var previousSlidesGridLength = swiper.slidesGrid.length;\n  var spaceBetween = params.spaceBetween;\n  var slidePosition = -offsetBefore;\n  var prevSlideSize = 0;\n  var index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: ''\n  });\n  var slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  } // Calc slides\n\n  var slideSize;\n  var slidesPerColumn = params.slidesPerColumn;\n  var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (var i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    var slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      var newSlideOrderIndex = void 0;\n      var column = void 0;\n      var row = void 0;\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n        slide.css({\n          '-webkit-box-ordinal-group': newSlideOrderIndex,\n          '-moz-box-ordinal-group': newSlideOrderIndex,\n          '-ms-flex-order': newSlideOrderIndex,\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - column * slidesPerColumn;\n        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n      slide.css(getDirectionLabel('margin-top'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      var slideStyles = getComputedStyle(slide[0]);\n      var currentTransform = slide[0].style.transform;\n      var currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        var width = getDirectionPropertyValue(slideStyles, 'width');\n        var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        var boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          var _slide$ = slide[0],\n            clientWidth = _slide$.clientWidth,\n            offsetWidth = _slide$.offsetWidth;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = slideSize + \"px\";\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  var newSlidesGrid;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n  }\n  if (params.setWrapperSize) {\n    var _$wrapperEl$css;\n    $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css));\n  }\n  if (params.slidesPerColumn > 1) {\n    var _$wrapperEl$css2;\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css2));\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var _i = 0; _i < snapGrid.length; _i += 1) {\n        var slidesGridItem = snapGrid[_i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  } // Remove last grid elements depending on width\n\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n      var _slidesGridItem = snapGrid[_i2];\n      if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n      if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(_slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    var _slides$filter$css;\n    var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter(slidesForMargin).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + \"px\", _slides$filter$css));\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    var allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    var maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(function (snap) {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    var _allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    _allSlidesSize -= params.spaceBetween;\n    if (_allSlidesSize < swiperSize) {\n      var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n      snapGrid.forEach(function (snap, snapIndex) {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach(function (snap, snapIndex) {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  extend(swiper, {\n    slides: slides,\n    snapGrid: snapGrid,\n    slidesGrid: slidesGrid,\n    slidesSizesGrid: slidesSizesGrid\n  });\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}","map":{"version":3,"names":["extend","updateSlides","swiper","getDirectionLabel","property","isHorizontal","getDirectionPropertyValue","node","label","parseFloat","getPropertyValue","params","$wrapperEl","swiperSize","size","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","length","children","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideEl","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","call","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","index","indexOf","replace","virtualSize","css","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slideSize","slidesPerRow","numFullColumns","i","slide","eq","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","order","slideStyles","getComputedStyle","currentTransform","style","transform","currentWebKitTransform","webkitTransform","roundLengths","outerWidth","outerHeight","width","paddingLeft","paddingRight","boxSizing","_slide$","clientWidth","offsetWidth","swiperSlideSize","push","centeredSlides","abs","slidesPerGroupSkip","newSlidesGrid","effect","setWrapperSize","_$wrapperEl$css","_$wrapperEl$css2","_i","slidesGridItem","_i2","_slidesGridItem","_slides$filter$css","key","filter","centeredSlidesBounds","allSlidesSize","forEach","slideSizeValue","maxSnap","map","snap","centerInsufficientSlides","_allSlidesSize","allSlidesOffset","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset"],"sources":["C:/Users/Alican/Desktop/bmcze-new_branch/node_modules/swiper/esm/components/core/update/updateSlides.js"],"sourcesContent":["import { extend } from '../../../utils/utils';\nexport default function updateSlides() {\n  var swiper = this;\n\n  var getDirectionLabel = function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  };\n\n  var getDirectionPropertyValue = function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  };\n\n  var params = swiper.params;\n  var $wrapperEl = swiper.$wrapperEl,\n      swiperSize = swiper.size,\n      rtl = swiper.rtlTranslate,\n      wrongRTL = swiper.wrongRTL;\n  var isVirtual = swiper.virtual && params.virtual.enabled;\n  var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n  var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  var snapGrid = [];\n  var slidesGrid = [];\n  var slidesSizesGrid = [];\n\n  function slidesForMargin(slideEl, slideIndex) {\n    if (!params.cssMode) return true;\n\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  var offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  var offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  var previousSnapGridLength = swiper.snapGrid.length;\n  var previousSlidesGridLength = swiper.slidesGrid.length;\n  var spaceBetween = params.spaceBetween;\n  var slidePosition = -offsetBefore;\n  var prevSlideSize = 0;\n  var index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: ''\n  });\n  var slidesNumberEvenToRows;\n\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  } // Calc slides\n\n\n  var slideSize;\n  var slidesPerColumn = params.slidesPerColumn;\n  var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n  for (var i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    var slide = slides.eq(i);\n\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      var newSlideOrderIndex = void 0;\n      var column = void 0;\n      var row = void 0;\n\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n        slide.css({\n          '-webkit-box-ordinal-group': newSlideOrderIndex,\n          '-moz-box-ordinal-group': newSlideOrderIndex,\n          '-ms-flex-order': newSlideOrderIndex,\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - column * slidesPerColumn;\n\n        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n          row += 1;\n\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n\n      slide.css(getDirectionLabel('margin-top'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      var slideStyles = getComputedStyle(slide[0]);\n      var currentTransform = slide[0].style.transform;\n      var currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        var width = getDirectionPropertyValue(slideStyles, 'width');\n        var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          var _slide$ = slide[0],\n              clientWidth = _slide$.clientWidth,\n              offsetWidth = _slide$.offsetWidth;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = slideSize + \"px\";\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  var newSlidesGrid;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: swiper.virtualSize + params.spaceBetween + \"px\"\n    });\n  }\n\n  if (params.setWrapperSize) {\n    var _$wrapperEl$css;\n\n    $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css));\n  }\n\n  if (params.slidesPerColumn > 1) {\n    var _$wrapperEl$css2;\n\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css2));\n\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var _i = 0; _i < snapGrid.length; _i += 1) {\n        var slidesGridItem = snapGrid[_i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n\n      snapGrid = newSlidesGrid;\n    }\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n\n    for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n      var _slidesGridItem = snapGrid[_i2];\n      if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n\n      if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(_slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    var _slides$filter$css;\n\n    var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter(slidesForMargin).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + \"px\", _slides$filter$css));\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    var allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    var maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(function (snap) {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    var _allSlidesSize = 0;\n    slidesSizesGrid.forEach(function (slideSizeValue) {\n      _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    _allSlidesSize -= params.spaceBetween;\n\n    if (_allSlidesSize < swiperSize) {\n      var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n      snapGrid.forEach(function (snap, snapIndex) {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach(function (snap, snapIndex) {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  extend(swiper, {\n    slides: slides,\n    snapGrid: snapGrid,\n    slidesGrid: slidesGrid,\n    slidesSizesGrid: slidesSizesGrid\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}